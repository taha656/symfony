<?php

namespace Proxies\__CG__\TFT\personneBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class jeu extends \TFT\personneBundle\Entity\jeu implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'id', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'resultat', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'cagnotte', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'nbGagnant', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches1', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches2', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches3', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches4', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches5', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches6', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches7', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches8', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches9', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches10'];
        }

        return ['__isInitialized__', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'id', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'resultat', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'cagnotte', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'nbGagnant', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches1', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches2', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches3', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches4', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches5', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches6', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches7', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches8', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches9', '' . "\0" . 'TFT\\personneBundle\\Entity\\jeu' . "\0" . 'idmatches10'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (jeu $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdmatches1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches1', []);

        return parent::getIdmatches1();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches2', []);

        return parent::getIdmatches2();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches3', []);

        return parent::getIdmatches3();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches4', []);

        return parent::getIdmatches4();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches5()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches5', []);

        return parent::getIdmatches5();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches6()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches6', []);

        return parent::getIdmatches6();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches7()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches7', []);

        return parent::getIdmatches7();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches8()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches8', []);

        return parent::getIdmatches8();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches9()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches9', []);

        return parent::getIdmatches9();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdmatches10()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdmatches10', []);

        return parent::getIdmatches10();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches2($idmatches2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches2', [$idmatches2]);

        return parent::setIdmatches2($idmatches2);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches3($idmatches3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches3', [$idmatches3]);

        return parent::setIdmatches3($idmatches3);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches4($idmatches4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches4', [$idmatches4]);

        return parent::setIdmatches4($idmatches4);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches5($idmatches5)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches5', [$idmatches5]);

        return parent::setIdmatches5($idmatches5);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches6($idmatches6)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches6', [$idmatches6]);

        return parent::setIdmatches6($idmatches6);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches7($idmatches7)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches7', [$idmatches7]);

        return parent::setIdmatches7($idmatches7);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches8($idmatches8)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches8', [$idmatches8]);

        return parent::setIdmatches8($idmatches8);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches9($idmatches9)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches9', [$idmatches9]);

        return parent::setIdmatches9($idmatches9);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches10($idmatches10)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches10', [$idmatches10]);

        return parent::setIdmatches10($idmatches10);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdmatches1($idmatches1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdmatches1', [$idmatches1]);

        return parent::setIdmatches1($idmatches1);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setResultat($resultat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResultat', [$resultat]);

        return parent::setResultat($resultat);
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getResultat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResultat', []);

        return parent::getResultat();
    }

    /**
     * {@inheritDoc}
     */
    public function setCagnotte($cagnotte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCagnotte', [$cagnotte]);

        return parent::setCagnotte($cagnotte);
    }

    /**
     * {@inheritDoc}
     */
    public function getCagnotte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCagnotte', []);

        return parent::getCagnotte();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbGagnant($nbGagnant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbGagnant', [$nbGagnant]);

        return parent::setNbGagnant($nbGagnant);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbGagnant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbGagnant', []);

        return parent::getNbGagnant();
    }

}
